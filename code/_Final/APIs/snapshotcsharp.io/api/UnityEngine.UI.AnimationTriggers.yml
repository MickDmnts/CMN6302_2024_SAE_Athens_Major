### YamlMime:ManagedReference
items:
- uid: UnityEngine.UI.AnimationTriggers
  commentId: T:UnityEngine.UI.AnimationTriggers
  id: AnimationTriggers
  parent: UnityEngine.UI
  children:
  - UnityEngine.UI.AnimationTriggers.disabledTrigger
  - UnityEngine.UI.AnimationTriggers.highlightedTrigger
  - UnityEngine.UI.AnimationTriggers.normalTrigger
  - UnityEngine.UI.AnimationTriggers.pressedTrigger
  - UnityEngine.UI.AnimationTriggers.selectedTrigger
  langs:
  - csharp
  - vb
  name: AnimationTriggers
  nameWithType: AnimationTriggers
  fullName: UnityEngine.UI.AnimationTriggers
  type: Class
  source:
    remote:
      path: code/unityProject/development/SnapshotDevelopment/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
      branch: mad
      repo: https://github.com/MickDmnts/CMN6302_2024_SAE_Athens_Major.git
    id: AnimationTriggers
    path: ../Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
    startLine: 8
  assemblies:
  - UnityEngine.UI
  namespace: UnityEngine.UI
  summary: Structure that stores the state of an animation transition on a Selectable.
  example: []
  syntax:
    content: >-
      [Serializable]

      public class AnimationTriggers
    content.vb: >-
      <Serializable>

      Public Class AnimationTriggers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: UnityEngine.UI.AnimationTriggers.normalTrigger
  commentId: P:UnityEngine.UI.AnimationTriggers.normalTrigger
  id: normalTrigger
  parent: UnityEngine.UI.AnimationTriggers
  langs:
  - csharp
  - vb
  name: normalTrigger
  nameWithType: AnimationTriggers.normalTrigger
  fullName: UnityEngine.UI.AnimationTriggers.normalTrigger
  type: Property
  source:
    remote:
      path: code/unityProject/development/SnapshotDevelopment/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
      branch: mad
      repo: https://github.com/MickDmnts/CMN6302_2024_SAE_Athens_Major.git
    id: normalTrigger
    path: ../Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
    startLine: 60
  assemblies:
  - UnityEngine.UI
  namespace: UnityEngine.UI
  summary: Trigger to send to animator when entering normal state.
  example:
  - >-
    <pre><code class="lang-csharp">using UnityEngine;

    using System.Collections;

    using UnityEngine.UI; // Required when Using UI elements.


    public class ExampleClass : MonoBehaviour

    {
        public Animator buttonAnimator;
        public Button button;
        void SomeFunction()
        {
            //Sets the button to the Normal state (Useful when making tutorials).
            buttonAnimator.SetTrigger(button.animationTriggers.normalTrigger);
        }
    }</code></pre>
  syntax:
    content: public string normalTrigger { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property normalTrigger As String
  overload: UnityEngine.UI.AnimationTriggers.normalTrigger*
- uid: UnityEngine.UI.AnimationTriggers.highlightedTrigger
  commentId: P:UnityEngine.UI.AnimationTriggers.highlightedTrigger
  id: highlightedTrigger
  parent: UnityEngine.UI.AnimationTriggers
  langs:
  - csharp
  - vb
  name: highlightedTrigger
  nameWithType: AnimationTriggers.highlightedTrigger
  fullName: UnityEngine.UI.AnimationTriggers.highlightedTrigger
  type: Property
  source:
    remote:
      path: code/unityProject/development/SnapshotDevelopment/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
      branch: mad
      repo: https://github.com/MickDmnts/CMN6302_2024_SAE_Athens_Major.git
    id: highlightedTrigger
    path: ../Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
    startLine: 85
  assemblies:
  - UnityEngine.UI
  namespace: UnityEngine.UI
  summary: Trigger to send to animator when entering highlighted state.
  example:
  - >-
    <pre><code class="lang-csharp">using UnityEngine;

    using System.Collections;

    using UnityEngine.UI; // Required when Using UI elements.


    public class ExampleClass : MonoBehaviour

    {
        public Animator buttonAnimator;
        public Button button;
        void SomeFunction()
        {
            //Sets the button to the Highlighted state (Useful when making tutorials).
            buttonAnimator.SetTrigger(button.animationTriggers.highlightedTrigger);
        }
    }</code></pre>
  syntax:
    content: public string highlightedTrigger { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property highlightedTrigger As String
  overload: UnityEngine.UI.AnimationTriggers.highlightedTrigger*
- uid: UnityEngine.UI.AnimationTriggers.pressedTrigger
  commentId: P:UnityEngine.UI.AnimationTriggers.pressedTrigger
  id: pressedTrigger
  parent: UnityEngine.UI.AnimationTriggers
  langs:
  - csharp
  - vb
  name: pressedTrigger
  nameWithType: AnimationTriggers.pressedTrigger
  fullName: UnityEngine.UI.AnimationTriggers.pressedTrigger
  type: Property
  source:
    remote:
      path: code/unityProject/development/SnapshotDevelopment/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
      branch: mad
      repo: https://github.com/MickDmnts/CMN6302_2024_SAE_Athens_Major.git
    id: pressedTrigger
    path: ../Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
    startLine: 110
  assemblies:
  - UnityEngine.UI
  namespace: UnityEngine.UI
  summary: Trigger to send to animator when entering pressed state.
  example:
  - >-
    <pre><code class="lang-csharp">using UnityEngine;

    using System.Collections;

    using UnityEngine.UI; // Required when Using UI elements.


    public class ExampleClass : MonoBehaviour

    {
        public Animator buttonAnimator;
        public Button button;
        void SomeFunction()
        {
            //Sets the button to the Pressed state (Useful when making tutorials).
            buttonAnimator.SetTrigger(button.animationTriggers.pressedTrigger);
        }
    }</code></pre>
  syntax:
    content: public string pressedTrigger { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property pressedTrigger As String
  overload: UnityEngine.UI.AnimationTriggers.pressedTrigger*
- uid: UnityEngine.UI.AnimationTriggers.selectedTrigger
  commentId: P:UnityEngine.UI.AnimationTriggers.selectedTrigger
  id: selectedTrigger
  parent: UnityEngine.UI.AnimationTriggers
  langs:
  - csharp
  - vb
  name: selectedTrigger
  nameWithType: AnimationTriggers.selectedTrigger
  fullName: UnityEngine.UI.AnimationTriggers.selectedTrigger
  type: Property
  source:
    remote:
      path: code/unityProject/development/SnapshotDevelopment/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
      branch: mad
      repo: https://github.com/MickDmnts/CMN6302_2024_SAE_Athens_Major.git
    id: selectedTrigger
    path: ../Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
    startLine: 135
  assemblies:
  - UnityEngine.UI
  namespace: UnityEngine.UI
  summary: Trigger to send to animator when entering selected state.
  example:
  - >-
    <pre><code class="lang-csharp">using UnityEngine;

    using System.Collections;

    using UnityEngine.UI; // Required when Using UI elements.


    public class ExampleClass : MonoBehaviour

    {
        public Animator buttonAnimator;
        public Button button;
        void SomeFunction()
        {
            //Sets the button to the Selected state (Useful when making tutorials).
            buttonAnimator.SetTrigger(button.animationTriggers.selectedTrigger);
        }
    }</code></pre>
  syntax:
    content: public string selectedTrigger { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property selectedTrigger As String
  overload: UnityEngine.UI.AnimationTriggers.selectedTrigger*
- uid: UnityEngine.UI.AnimationTriggers.disabledTrigger
  commentId: P:UnityEngine.UI.AnimationTriggers.disabledTrigger
  id: disabledTrigger
  parent: UnityEngine.UI.AnimationTriggers
  langs:
  - csharp
  - vb
  name: disabledTrigger
  nameWithType: AnimationTriggers.disabledTrigger
  fullName: UnityEngine.UI.AnimationTriggers.disabledTrigger
  type: Property
  source:
    remote:
      path: code/unityProject/development/SnapshotDevelopment/Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
      branch: mad
      repo: https://github.com/MickDmnts/CMN6302_2024_SAE_Athens_Major.git
    id: disabledTrigger
    path: ../Library/PackageCache/com.unity.ugui@1.0.0/Runtime/UI/Core/AnimationTriggers.cs
    startLine: 160
  assemblies:
  - UnityEngine.UI
  namespace: UnityEngine.UI
  summary: Trigger to send to animator when entering disabled state.
  example:
  - >-
    <pre><code class="lang-csharp">using UnityEngine;

    using System.Collections;

    using UnityEngine.UI; // Required when Using UI elements.


    public class ExampleClass : MonoBehaviour

    {
        public Animator buttonAnimator;
        public Button button;
        void SomeFunction()
        {
            //Sets the button to the Disabled state (Useful when making tutorials).
            buttonAnimator.SetTrigger(button.animationTriggers.disabledTrigger);
        }
    }</code></pre>
  syntax:
    content: public string disabledTrigger { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property disabledTrigger As String
  overload: UnityEngine.UI.AnimationTriggers.disabledTrigger*
references:
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  href: UnityEngine.html
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    href: UnityEngine.html
  - name: .
  - uid: UnityEngine.UI
    name: UI
    href: UnityEngine.UI.html
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    href: UnityEngine.html
  - name: .
  - uid: UnityEngine.UI
    name: UI
    href: UnityEngine.UI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.UI.AnimationTriggers.normalTrigger*
  commentId: Overload:UnityEngine.UI.AnimationTriggers.normalTrigger
  href: UnityEngine.UI.AnimationTriggers.html#UnityEngine_UI_AnimationTriggers_normalTrigger
  name: normalTrigger
  nameWithType: AnimationTriggers.normalTrigger
  fullName: UnityEngine.UI.AnimationTriggers.normalTrigger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.UI.AnimationTriggers.highlightedTrigger*
  commentId: Overload:UnityEngine.UI.AnimationTriggers.highlightedTrigger
  href: UnityEngine.UI.AnimationTriggers.html#UnityEngine_UI_AnimationTriggers_highlightedTrigger
  name: highlightedTrigger
  nameWithType: AnimationTriggers.highlightedTrigger
  fullName: UnityEngine.UI.AnimationTriggers.highlightedTrigger
- uid: UnityEngine.UI.AnimationTriggers.pressedTrigger*
  commentId: Overload:UnityEngine.UI.AnimationTriggers.pressedTrigger
  href: UnityEngine.UI.AnimationTriggers.html#UnityEngine_UI_AnimationTriggers_pressedTrigger
  name: pressedTrigger
  nameWithType: AnimationTriggers.pressedTrigger
  fullName: UnityEngine.UI.AnimationTriggers.pressedTrigger
- uid: UnityEngine.UI.AnimationTriggers.selectedTrigger*
  commentId: Overload:UnityEngine.UI.AnimationTriggers.selectedTrigger
  href: UnityEngine.UI.AnimationTriggers.html#UnityEngine_UI_AnimationTriggers_selectedTrigger
  name: selectedTrigger
  nameWithType: AnimationTriggers.selectedTrigger
  fullName: UnityEngine.UI.AnimationTriggers.selectedTrigger
- uid: UnityEngine.UI.AnimationTriggers.disabledTrigger*
  commentId: Overload:UnityEngine.UI.AnimationTriggers.disabledTrigger
  href: UnityEngine.UI.AnimationTriggers.html#UnityEngine_UI_AnimationTriggers_disabledTrigger
  name: disabledTrigger
  nameWithType: AnimationTriggers.disabledTrigger
  fullName: UnityEngine.UI.AnimationTriggers.disabledTrigger
